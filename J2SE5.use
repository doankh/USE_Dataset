model J2SE5
abstract class AbstractTypeDeclaration<BodyDeclaration
attributes
	originalFileContent : String
operations
end

class Annotation<Expression
attributes
operations
end

class AnnotationMemberValuePair<ASTNode
attributes
operations
end

class AnnotationTypeDeclaration<AbstractTypeDeclaration
attributes
operations
end

class AnnotationTypeMemberDeclaration<BodyDeclaration
attributes
operations
end

class AnonymousClassDeclaration<ASTNode
attributes
operations
end

class ArrayAccess<Expression
attributes
operations
end

class ArrayCreation<Expression
attributes
operations
end

class ArrayInitializer<Expression
attributes
operations
end

class ArrayLengthAccess<Expression
attributes
operations
end

class AssertStatement<Statement
attributes
operations
end

class Assignment<Expression
attributes
	operator : String
operations
end

abstract class ASTNode
attributes
operations
end

abstract class BodyDeclaration<ASTNode
attributes
	modifiers : String
operations
end

class Block<Statement
attributes
operations
end

class BlockComment<Comment
attributes
operations
end

class BreakStatement<Statement
attributes
operations
end

class CastExpression<Expression
attributes
operations
end

class CatchClause<ASTNode
attributes
operations
end

class ClassInstanceCreation<Expression
attributes
operations
end

abstract class Comment<ASTNode
attributes
	content : String
	isEnclosedByParent : Boolean
	isPrefixOfParent : Boolean
operations
end

class ConditionalExpression<Expression
attributes
operations
end

class ContinueStatement<Statement
attributes
operations
end

class ConstructorInvocation<Statement
attributes
operations
end

class DoStatement<Statement
attributes
operations
end

class EmptyStatement<Statement
attributes
operations
end

class EnhancedForStatement<Statement
attributes
operations
end

class EnumConstantDeclaration<NamedElement
attributes
operations
end

class EnumDeclaration<AbstractTypeDeclaration
attributes
operations
end

abstract class Expression<ASTNode
attributes
operations
end

class ExpressionStatement<Statement
attributes
operations
end

class FieldAccess<Expression
attributes
operations
end

class FieldDeclaration<MultipleValuedNamedElement
attributes
operations
end

class ForStatement<Statement
attributes
operations
end

class InfixExpression<Expression
attributes
	operator : String
operations
end

class IfStatement<Statement
attributes
operations
end

class ImportDeclaration<ASTNode
attributes
	static : Boolean
operations
end

class Initializer<BodyDeclaration
attributes
operations
end

class InstanceofExpression<Expression
attributes
operations
end

class Javadoc<Comment
attributes
operations
end

class LabeledStatement<NamedElement
attributes
operations
end

class LineComment<Comment
attributes
operations
end

class MemberRef<ASTNode
attributes
operations
end

class MethodDeclaration<BodyDeclaration
attributes
	extraArrayDimensions : Integer
	constructor : Boolean
	varargs : Boolean
operations
end

class MethodInvocation<Expression
attributes
operations
end

class MethodRef<ASTNode
attributes
operations
end

class MethodRefParameter<ASTNode
attributes
	name : String
	isVarargs : Boolean
operations
end

class Model
attributes
	name : String
operations
end

abstract class MultipleValuedNamedElement<ValuedNamedElement
attributes
operations
end

abstract class NamedElement
attributes
	name : String
	proxy : Boolean
operations
end

class NamedElementRef<Expression
attributes
	extraArrayDimensions : Integer
operations
end

class OrphanType<NamedElement
attributes
operations
end

class PackageDeclaration<NamedElement
attributes
operations
end

class ParameterizedType<OrphanType
attributes
operations
end

class ParenthesizedExpression<Expression
attributes
operations
end

class PostfixExpression<Expression
attributes
	operator : String
operations
end

class PrefixExpression<Expression
attributes
	operator : String
operations
end

class PrimitiveType<OrphanType
attributes
operations
end

class ReturnStatement<Statement
attributes
operations
end

class ThrowStatement<Statement
attributes
operations
end

class SingleVariableDeclaration<ValuedNamedElement
attributes
	modifiers : String
	isVarargs : Boolean
operations
end

abstract class Statement<ASTNode
attributes
operations
end

class SuperConstructorInvocation<Statement
attributes
operations
end

class SuperFieldAccess<Expression
attributes
operations
end

class SuperMethodInvocation<Expression
attributes
operations
end

class SwitchCase<Statement
attributes
	expressionInitialized : Boolean
operations
end

class SwitchStatement<Statement
attributes
operations
end

class SynchronizedStatement<Statement
attributes
operations
end

class TagElement<ASTNode
attributes
	tagName : String
operations
end

class TextElement<ASTNode
attributes
	text : String
operations
end

class ThisExpression<Expression
attributes
operations
end

class TryStatement<Statement
attributes
operations
end

class TypeDeclaration<AbstractTypeDeclaration
attributes
	isInterface : Boolean
operations
end

class TypeDeclarationStatement<Statement
attributes
operations
end

class TypeLiteral<Expression
attributes
operations
end

class TypeParameter<NamedElement
attributes
operations
end

class UnresolvedItem<ASTNode
attributes
operations
end

abstract class ValuedNamedElement<NamedElement
attributes
	extraArrayDimensions : Integer
operations
end

class VariableDeclarationExpression<ValuedNamedElement
attributes
	modifiers : String
operations
end

class VariableDeclarationStatement<ValuedNamedElement
attributes
	modifiers : String
operations
end

class WildCardType<ASTNode
attributes
	isUpperBound : Boolean
operations
end

class WhileStatement<Statement
attributes
operations
end

association xxx_AbstractTypeDeclaration_package between
	AbstractTypeDeclaration[*] role xxx_AbstractTypeDeclaration_package_src
	PackageDeclaration[1] role package
end

composition xxx_AbstractTypeDeclaration_bodyDeclarations between
	AbstractTypeDeclaration[0..1] role xxx_AbstractTypeDeclaration_bodyDeclarations_src
	BodyDeclaration[*] role bodyDeclarations
end

composition xxx_AbstractTypeDeclaration_superInterfaces between
	AbstractTypeDeclaration[0..1] role xxx_AbstractTypeDeclaration_superInterfaces_src
	NamedElementRef[*] role superInterfaces
end

composition xxx_AbstractTypeDeclaration_commentsAfterBody between
	AbstractTypeDeclaration[0..1] role xxx_AbstractTypeDeclaration_commentsAfterBody_src
	Comment[*] role commentsAfterBody
end

composition xxx_AbstractTypeDeclaration_imports between
	AbstractTypeDeclaration[0..1] role xxx_AbstractTypeDeclaration_imports_src
	ImportDeclaration[*] role imports
end

composition xxx_AbstractTypeDeclaration_commentsBeforeBody between
	AbstractTypeDeclaration[0..1] role xxx_AbstractTypeDeclaration_commentsBeforeBody_src
	Comment[*] role commentsBeforeBody
end

composition xxx_Annotation_type between
	Annotation[*] role xxx_Annotation_type_src
	NamedElementRef[1] role type
end

composition xxx_Annotation_values between
	Annotation[0..1] role xxx_Annotation_values_src
	AnnotationMemberValuePair[*] role values
end

composition xxx_AnnotationMemberValuePair_member between
	AnnotationMemberValuePair[*] role xxx_AnnotationMemberValuePair_member_src
	NamedElementRef[1] role member
end

composition xxx_AnnotationMemberValuePair_value between
	AnnotationMemberValuePair[*] role xxx_AnnotationMemberValuePair_value_src
	Expression[1] role value
end

composition xxx_AnnotationTypeMemberDeclaration_type between
	AnnotationTypeMemberDeclaration[*] role xxx_AnnotationTypeMemberDeclaration_type_src
	NamedElementRef[1] role type
end

composition xxx_AnnotationTypeMemberDeclaration_default between
	AnnotationTypeMemberDeclaration[*] role xxx_AnnotationTypeMemberDeclaration_default_src
	Expression[0..1] role default
end

composition xxx_AnonymousClassDeclaration_bodyDeclarations between
	AnonymousClassDeclaration[0..1] role xxx_AnonymousClassDeclaration_bodyDeclarations_src
	BodyDeclaration[*] role bodyDeclarations
end

composition xxx_ArrayAccess_index between
	ArrayAccess[*] role xxx_ArrayAccess_index_src
	Expression[1] role index
end

composition xxx_ArrayAccess_array between
	ArrayAccess[*] role xxx_ArrayAccess_array_src
	Expression[1] role array
end

composition xxx_ArrayCreation_dimensions between
	ArrayCreation[0..1] role xxx_ArrayCreation_dimensions_src
	Expression[*] role dimensions
end

composition xxx_ArrayCreation_initializer between
	ArrayCreation[*] role xxx_ArrayCreation_initializer_src
	ArrayInitializer[0..1] role initializer
end

composition xxx_ArrayCreation_type between
	ArrayCreation[*] role xxx_ArrayCreation_type_src
	NamedElementRef[1] role type
end

composition xxx_ArrayInitializer_expressions between
	ArrayInitializer[0..1] role xxx_ArrayInitializer_expressions_src
	Expression[*] role expressions
end

composition xxx_ArrayLengthAccess_array between
	ArrayLengthAccess[*] role xxx_ArrayLengthAccess_array_src
	Expression[1] role array
end

composition xxx_AssertStatement_message between
	AssertStatement[*] role xxx_AssertStatement_message_src
	Expression[0..1] role message
end

composition xxx_AssertStatement_expression between
	AssertStatement[*] role xxx_AssertStatement_expression_src
	Expression[1] role expression
end

composition xxx_Assignment_rightHandSide between
	Assignment[*] role xxx_Assignment_rightHandSide_src
	Expression[1] role rightHandSide
end

composition xxx_Assignment_leftHandSide between
	Assignment[*] role xxx_Assignment_leftHandSide_src
	Expression[1] role leftHandSide
end

composition xxx_ASTNode_comments between
	ASTNode[0..1] role xxx_ASTNode_comments_src
	Comment[*] role comments
end

composition xxx_BodyDeclaration_annotations between
	BodyDeclaration[0..1] role xxx_BodyDeclaration_annotations_src
	Annotation[*] role annotations
end

composition xxx_Block_statements between
	Block[0..1] role xxx_Block_statements_src
	Statement[*] role statements
end

composition xxx_BreakStatement_label between
	BreakStatement[*] role xxx_BreakStatement_label_src
	NamedElementRef[0..1] role label
end

composition xxx_CastExpression_type between
	CastExpression[*] role xxx_CastExpression_type_src
	NamedElementRef[1] role type
end

composition xxx_CastExpression_expression between
	CastExpression[*] role xxx_CastExpression_expression_src
	Expression[1] role expression
end

composition xxx_CatchClause_exception between
	CatchClause[*] role xxx_CatchClause_exception_src
	SingleVariableDeclaration[1] role exception
end

composition xxx_CatchClause_body between
	CatchClause[*] role xxx_CatchClause_body_src
	Block[1] role body
end

composition xxx_ClassInstanceCreation_arguments between
	ClassInstanceCreation[0..1] role xxx_ClassInstanceCreation_arguments_src
	Expression[*] role arguments
end

composition xxx_ClassInstanceCreation_type between
	ClassInstanceCreation[*] role xxx_ClassInstanceCreation_type_src
	NamedElementRef[1] role type
end

composition xxx_ClassInstanceCreation_expression between
	ClassInstanceCreation[*] role xxx_ClassInstanceCreation_expression_src
	Expression[0..1] role expression
end

composition xxx_ClassInstanceCreation_anonymousClassDeclaration between
	ClassInstanceCreation[*] role xxx_ClassInstanceCreation_anonymousClassDeclaration_src
	AnonymousClassDeclaration[0..1] role anonymousClassDeclaration
end

composition xxx_ConditionalExpression_elseExpression between
	ConditionalExpression[*] role xxx_ConditionalExpression_elseExpression_src
	Expression[1] role elseExpression
end

composition xxx_ConditionalExpression_thenExpression between
	ConditionalExpression[*] role xxx_ConditionalExpression_thenExpression_src
	Expression[1] role thenExpression
end

composition xxx_ConditionalExpression_expression between
	ConditionalExpression[*] role xxx_ConditionalExpression_expression_src
	Expression[1] role expression
end

composition xxx_ContinueStatement_label between
	ContinueStatement[*] role xxx_ContinueStatement_label_src
	NamedElementRef[0..1] role label
end

composition xxx_ConstructorInvocation_arguments between
	ConstructorInvocation[0..1] role xxx_ConstructorInvocation_arguments_src
	Expression[*] role arguments
end

composition xxx_DoStatement_expression between
	DoStatement[*] role xxx_DoStatement_expression_src
	Expression[1] role expression
end

composition xxx_DoStatement_body between
	DoStatement[*] role xxx_DoStatement_body_src
	Statement[1] role body
end

composition xxx_EnhancedForStatement_parameter between
	EnhancedForStatement[*] role xxx_EnhancedForStatement_parameter_src
	SingleVariableDeclaration[1] role parameter
end

composition xxx_EnhancedForStatement_expression between
	EnhancedForStatement[*] role xxx_EnhancedForStatement_expression_src
	Expression[1] role expression
end

composition xxx_EnhancedForStatement_body between
	EnhancedForStatement[*] role xxx_EnhancedForStatement_body_src
	Statement[1] role body
end

composition xxx_EnumConstantDeclaration_arguments between
	EnumConstantDeclaration[0..1] role xxx_EnumConstantDeclaration_arguments_src
	Expression[*] role arguments
end

composition xxx_EnumConstantDeclaration_anonymousClassDeclaration between
	EnumConstantDeclaration[*] role xxx_EnumConstantDeclaration_anonymousClassDeclaration_src
	AnonymousClassDeclaration[0..1] role anonymousClassDeclaration
end

composition xxx_EnumDeclaration_enumConstants between
	EnumDeclaration[0..1] role xxx_EnumDeclaration_enumConstants_src
	EnumConstantDeclaration[*] role enumConstants
end

composition xxx_ExpressionStatement_expression between
	ExpressionStatement[*] role xxx_ExpressionStatement_expression_src
	Expression[1] role expression
end

composition xxx_FieldAccess_field between
	FieldAccess[*] role xxx_FieldAccess_field_src
	NamedElementRef[1] role field
end

composition xxx_FieldAccess_expression between
	FieldAccess[*] role xxx_FieldAccess_expression_src
	Expression[1] role expression
end

composition xxx_FieldDeclaration_type between
	FieldDeclaration[*] role xxx_FieldDeclaration_type_src
	NamedElementRef[1] role type
end

composition xxx_ForStatement_body between
	ForStatement[*] role xxx_ForStatement_body_src
	Statement[1] role body
end

composition xxx_ForStatement_expression between
	ForStatement[*] role xxx_ForStatement_expression_src
	Expression[0..1] role expression
end

composition xxx_ForStatement_initializers between
	ForStatement[0..1] role xxx_ForStatement_initializers_src
	Expression[*] role initializers
end

composition xxx_ForStatement_updaters between
	ForStatement[0..1] role xxx_ForStatement_updaters_src
	Expression[*] role updaters
end

composition xxx_InfixExpression_extendedOperands between
	InfixExpression[0..1] role xxx_InfixExpression_extendedOperands_src
	Expression[*] role extendedOperands
end

composition xxx_InfixExpression_rightOperand between
	InfixExpression[*] role xxx_InfixExpression_rightOperand_src
	Expression[1] role rightOperand
end

composition xxx_InfixExpression_leftOperand between
	InfixExpression[*] role xxx_InfixExpression_leftOperand_src
	Expression[1] role leftOperand
end

composition xxx_IfStatement_expression between
	IfStatement[*] role xxx_IfStatement_expression_src
	Expression[1] role expression
end

composition xxx_IfStatement_elseStatement between
	IfStatement[*] role xxx_IfStatement_elseStatement_src
	Statement[0..1] role elseStatement
end

composition xxx_IfStatement_thenStatement between
	IfStatement[*] role xxx_IfStatement_thenStatement_src
	Statement[1] role thenStatement
end

composition xxx_ImportDeclaration_importedElement between
	ImportDeclaration[*] role xxx_ImportDeclaration_importedElement_src
	NamedElementRef[1] role importedElement
end

composition xxx_Initializer_body between
	Initializer[*] role xxx_Initializer_body_src
	Block[1] role body
end

composition xxx_InstanceofExpression_leftOperand between
	InstanceofExpression[*] role xxx_InstanceofExpression_leftOperand_src
	Expression[1] role leftOperand
end

composition xxx_InstanceofExpression_rightOperand between
	InstanceofExpression[*] role xxx_InstanceofExpression_rightOperand_src
	NamedElementRef[1] role rightOperand
end

composition xxx_Javadoc_tags between
	Javadoc[0..1] role xxx_Javadoc_tags_src
	TagElement[*] role tags
end

composition xxx_LabeledStatement_body between
	LabeledStatement[*] role xxx_LabeledStatement_body_src
	Statement[1] role body
end

composition xxx_MemberRef_qualifier between
	MemberRef[*] role xxx_MemberRef_qualifier_src
	NamedElementRef[0..1] role qualifier
end

composition xxx_MemberRef_member between
	MemberRef[*] role xxx_MemberRef_member_src
	NamedElementRef[1] role member
end

composition xxx_MethodDeclaration_body between
	MethodDeclaration[*] role xxx_MethodDeclaration_body_src
	Block[0..1] role body
end

composition xxx_MethodDeclaration_parameters between
	MethodDeclaration[0..1] role xxx_MethodDeclaration_parameters_src
	SingleVariableDeclaration[*] role parameters
end

composition xxx_MethodDeclaration_typeParameters between
	MethodDeclaration[0..1] role xxx_MethodDeclaration_typeParameters_src
	TypeParameter[*] role typeParameters
end

composition xxx_MethodDeclaration_thrownExceptions between
	MethodDeclaration[0..1] role xxx_MethodDeclaration_thrownExceptions_src
	NamedElementRef[*] role thrownExceptions
end

composition xxx_MethodDeclaration_returnType between
	MethodDeclaration[*] role xxx_MethodDeclaration_returnType_src
	NamedElementRef[1] role returnType
end

composition xxx_MethodInvocation_method between
	MethodInvocation[*] role xxx_MethodInvocation_method_src
	NamedElementRef[1] role method
end

composition xxx_MethodInvocation_arguments between
	MethodInvocation[0..1] role xxx_MethodInvocation_arguments_src
	Expression[*] role arguments
end

composition xxx_MethodInvocation_expression between
	MethodInvocation[*] role xxx_MethodInvocation_expression_src
	Expression[0..1] role expression
end

composition xxx_MethodRef_qualifier between
	MethodRef[*] role xxx_MethodRef_qualifier_src
	NamedElementRef[0..1] role qualifier
end

composition xxx_MethodRef_parameters between
	MethodRef[0..1] role xxx_MethodRef_parameters_src
	MethodRefParameter[*] role parameters
end

composition xxx_MethodRef_method between
	MethodRef[*] role xxx_MethodRef_method_src
	NamedElementRef[1] role method
end

composition xxx_MethodRefParameter_type between
	MethodRefParameter[*] role xxx_MethodRefParameter_type_src
	NamedElementRef[0..1] role type
end

composition xxx_Model_ownedElements between
	Model[0..1] role xxx_Model_ownedElements_src
	PackageDeclaration[*] role ownedElements
end

composition xxx_Model_orphanTypes between
	Model[0..1] role xxx_Model_orphanTypes_src
	OrphanType[*] role orphanTypes
end

composition xxx_MultipleValuedNamedElement_fragments between
	MultipleValuedNamedElement[0..1] role xxx_MultipleValuedNamedElement_fragments_src
	SingleVariableDeclaration[*] role fragments
end

association xxx_NamedElementRef_element between
	NamedElementRef[*] role xxx_NamedElementRef_element_src
	NamedElement[0..1] role element
end

composition xxx_NamedElementRef_qualifier between
	NamedElementRef[*] role xxx_NamedElementRef_qualifier_src
	NamedElementRef[0..1] role qualifier
end

association xxx_PackageDeclaration_model_ between
	PackageDeclaration[*] role xxx_PackageDeclaration_model__src
	Model[1] role model_
end

composition xxx_PackageDeclaration_ownedElements between
	PackageDeclaration[0..1] role xxx_PackageDeclaration_ownedElements_src
	AbstractTypeDeclaration[*] role ownedElements
end

composition xxx_ParameterizedType_typeArguments between
	ParameterizedType[0..1] role xxx_ParameterizedType_typeArguments_src
	NamedElementRef[*] role typeArguments
end

composition xxx_ParameterizedType_type between
	ParameterizedType[*] role xxx_ParameterizedType_type_src
	NamedElementRef[1] role type
end

composition xxx_ParenthesizedExpression_expression between
	ParenthesizedExpression[*] role xxx_ParenthesizedExpression_expression_src
	Expression[1] role expression
end

composition xxx_PostfixExpression_operand between
	PostfixExpression[*] role xxx_PostfixExpression_operand_src
	Expression[1] role operand
end

composition xxx_PrefixExpression_operand between
	PrefixExpression[*] role xxx_PrefixExpression_operand_src
	Expression[1] role operand
end

composition xxx_ReturnStatement_expression between
	ReturnStatement[*] role xxx_ReturnStatement_expression_src
	Expression[0..1] role expression
end

composition xxx_ThrowStatement_expression between
	ThrowStatement[*] role xxx_ThrowStatement_expression_src
	Expression[1] role expression
end

composition xxx_SingleVariableDeclaration_type between
	SingleVariableDeclaration[*] role xxx_SingleVariableDeclaration_type_src
	NamedElementRef[1] role type
end

composition xxx_SuperConstructorInvocation_arguments between
	SuperConstructorInvocation[0..1] role xxx_SuperConstructorInvocation_arguments_src
	Expression[*] role arguments
end

composition xxx_SuperConstructorInvocation_expression between
	SuperConstructorInvocation[*] role xxx_SuperConstructorInvocation_expression_src
	Expression[0..1] role expression
end

composition xxx_SuperFieldAccess_qualifier between
	SuperFieldAccess[*] role xxx_SuperFieldAccess_qualifier_src
	NamedElementRef[0..1] role qualifier
end

composition xxx_SuperFieldAccess_field between
	SuperFieldAccess[*] role xxx_SuperFieldAccess_field_src
	NamedElementRef[1] role field
end

composition xxx_SuperMethodInvocation_arguments between
	SuperMethodInvocation[0..1] role xxx_SuperMethodInvocation_arguments_src
	Expression[*] role arguments
end

composition xxx_SuperMethodInvocation_qualifier between
	SuperMethodInvocation[*] role xxx_SuperMethodInvocation_qualifier_src
	NamedElementRef[0..1] role qualifier
end

composition xxx_SuperMethodInvocation_method between
	SuperMethodInvocation[*] role xxx_SuperMethodInvocation_method_src
	NamedElementRef[1] role method
end

composition xxx_SwitchCase_expression between
	SwitchCase[*] role xxx_SwitchCase_expression_src
	Expression[0..1] role expression
end

composition xxx_SwitchStatement_statements between
	SwitchStatement[0..1] role xxx_SwitchStatement_statements_src
	Statement[*] role statements
end

composition xxx_SwitchStatement_expression between
	SwitchStatement[*] role xxx_SwitchStatement_expression_src
	Expression[1] role expression
end

composition xxx_SynchronizedStatement_body between
	SynchronizedStatement[*] role xxx_SynchronizedStatement_body_src
	Block[1] role body
end

composition xxx_SynchronizedStatement_expression between
	SynchronizedStatement[*] role xxx_SynchronizedStatement_expression_src
	Expression[1] role expression
end

composition xxx_TagElement_fragments between
	TagElement[0..1] role xxx_TagElement_fragments_src
	ASTNode[*] role fragments
end

composition xxx_ThisExpression_qualifier between
	ThisExpression[*] role xxx_ThisExpression_qualifier_src
	NamedElementRef[0..1] role qualifier
end

composition xxx_TryStatement_finally between
	TryStatement[*] role xxx_TryStatement_finally_src
	Block[0..1] role finally
end

composition xxx_TryStatement_body between
	TryStatement[*] role xxx_TryStatement_body_src
	Block[1] role body
end

composition xxx_TryStatement_catchClauses between
	TryStatement[0..1] role xxx_TryStatement_catchClauses_src
	CatchClause[*] role catchClauses
end

composition xxx_TypeDeclaration_typeParameters between
	TypeDeclaration[0..1] role xxx_TypeDeclaration_typeParameters_src
	TypeParameter[*] role typeParameters
end

composition xxx_TypeDeclaration_superclass between
	TypeDeclaration[*] role xxx_TypeDeclaration_superclass_src
	NamedElementRef[0..1] role superclass
end

composition xxx_TypeDeclarationStatement_declaration between
	TypeDeclarationStatement[*] role xxx_TypeDeclarationStatement_declaration_src
	AbstractTypeDeclaration[1] role declaration
end

composition xxx_TypeLiteral_type between
	TypeLiteral[*] role xxx_TypeLiteral_type_src
	NamedElementRef[1] role type
end

composition xxx_TypeParameter_bounds between
	TypeParameter[0..1] role xxx_TypeParameter_bounds_src
	NamedElementRef[*] role bounds
end

composition xxx_ValuedNamedElement_initializer between
	ValuedNamedElement[*] role xxx_ValuedNamedElement_initializer_src
	Expression[0..1] role initializer
end

composition xxx_VariableDeclarationExpression_type between
	VariableDeclarationExpression[*] role xxx_VariableDeclarationExpression_type_src
	NamedElementRef[1] role type
end

composition xxx_VariableDeclarationStatement_type between
	VariableDeclarationStatement[*] role xxx_VariableDeclarationStatement_type_src
	NamedElementRef[1] role type
end

composition xxx_WildCardType_bound between
	WildCardType[*] role xxx_WildCardType_bound_src
	NamedElementRef[0..1] role bound
end

composition xxx_WhileStatement_expression between
	WhileStatement[*] role xxx_WhileStatement_expression_src
	Expression[1] role expression
end

composition xxx_WhileStatement_body between
	WhileStatement[*] role xxx_WhileStatement_body_src
	Statement[1] role body
end

